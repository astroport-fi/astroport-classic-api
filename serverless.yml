service: astroport-graph-api
useDotenv: true
variablesResolutionMode: 20210326

plugins:
  - serverless-offline
  - serverless-dotenv-plugin
  - serverless-plugin-typescript

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  environment:
    DECIMALS: ${env:DECIMALS}
    START_BLOCK_HEIGHT: ${env:START_BLOCK_HEIGHT}
    TERRA_LCD: ${env:TERRA_LCD}
    TERRA_HIVE: ${env:TERRA_HIVE}
    TERRA_MANTLE: ${env:TERRA_MANTLE}
    TERRA_CHAIN_ID: ${env:TERRA_CHAIN_ID}

functions:
  aggregator:
    handler: src/aggregator/index.run
    events:
      - schedule: rate(3 minutes)
    timeout: 175 # in seconds
    environment:
      MONGODB_URL: ${env:MONGODB_URL_RW}
  collector:
    handler: src/collector/index.run
    events:
      - schedule: rate(3 minutes)
    timeout: 175 # in seconds
    environment:
      MONGODB_URL: ${env:MONGODB_URL_RW}
#  slack-bot-backend-stats: # uncomment to redeploy backend-stat-bot
#    handler: src/bot/slack-bot-backend-stats/index.run
#    events:
#      - schedule: rate(10 minutes)
#    timeout: 20 # in seconds
  maker-fee-collector:
    handler: src/bot/maker-fee-collector/index.run
    events:
      - schedule: rate(12 hours)
    timeout: 10 # in seconds
  graphql:
    handler: src/graphql/index.run
    events:
      - http:
          path: graphql
          method: post
          cors: true
      - http:
          path: graphql
          method: get
          cors: true
    environment:
      MONGODB_URL: ${env:MONGODB_URL_R}

custom:
  environment: ${file(.env)}
  serverlessPluginTypescript:
    tsConfigFileLocation: "./tsconfig.serverless.json"
  serverless-offline:
    httpPort: 4000
